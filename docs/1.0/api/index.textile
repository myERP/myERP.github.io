---
layout: default
title: "- REST API V1.0 Resources"
---

h1(#general). REST API : General

h2. Resources

There's two kind of resources in myERP. Actual Datas from your domain, and those who refers to a kind of data as a whole.

h3. Actual Data

They end with the *id* of the actual data they refer to. They describe a single data.

p. Sample

{% highlight bash %}
curl -X GET {{ site.api.base_url }}{{ site.api.v1}}{{ site.resource.accounts.url}}/55002 {{site.api.auth_pattern}}
{% endhighlight %}
*55002* is the *id* of the account you are trying to get. Within myERP, you can find this id at the end of this account URI edition mode:
{% highlight bash %}
https://app.myerp.com/index.jsp?locale=en_US#account/55002/edit
{% endhighlight %}

Those are mostly used for GET (to retrieve a data), PUT (to edit a data) or DELETE (to delete a data) request.

h3. Data type

There's no id into them. They describe a type of data as a whole.

p. Sample

{% highlight bash %}
curl -X GET {{ site.api.base_url }}{{ site.api.v1}}{{ site.resource.accounts.url}} {{site.api.auth_pattern}}
{% endhighlight %}
This will retrieve the list of all your accounts.

Those are used to create new data of this kind, using POST request.
They are also usefull when you want to create or delete several datas of a specific kind in a row.


h2. Inner data

Some data are what we call _inner data_. Those are datas that are embeded into another one. Like contacts into customer. For those datas, URI are longer since they start by their container.

p. Sample

{% highlight bash %}
curl -X GET {{ site.api.base_url }}{{ site.api.v1}}{{ site.resource.accounts.url}}/55002/{{ site.resource.account_contacts_.url}} {{site.api.auth_pattern}}
{% endhighlight %}
This will retrieve all the contacts of the account *55002*.

There's not that much of this kind, mostly contacts (on accounts and vendors) and order lines (on either purchases or sales documents).


h2. JSON Fields

h3. Missing fields

* Creation: if the missing field is mandatory, an error message will be returned. Otherwise, the default value will be applied.
* Edition: the missing field is ignored, and no changes will be performed on it. If you want to edit a single field, just send this single one.

h3. Non existant fields

If your JSON contains any fields that are not managed by the resource, those fields will be ignored. So, beware of any typo.

h3. Duplicates fields

If a field is duplicate within the JSON or a resource, the value of the last one will prevail.

h3. Wrong values

* Bad type: If any value of a wrong type stands into your JSON, the parsing of the JSON will turn wrong and an error message will be returned.
* Wrong value: Some fields only accept certain values. If the value of such a field is wrong in your JSON, an error message will be returned.
* Non editable: While editing a resource, if any field that is not editable stands within your JSON, and tries to perform an actual modification, an error message will be returned.


h1(#resources). REST API v1.0 Resources

p(title). "Accounts":account/#format

p(caption). Accounts are collections of accounts (leads and customers).

|_(thead). Type |_(thead). Description |
|"GET accounts/:id":account/#account_get|Returns all the information about the account.|
|"PUT accounts/:id":account/#account_put|Update a single account.|
|"DELETE accounts/:id":account/#account_delete|Deletes a single account. Also delete all of his contacts.|
|"GET accounts":account/#accounts_get|Returns the list of all your accounts.|
|"POST accounts":account/#accounts_post|Create a single account.|
|"PUT accounts":account/#accounts_put|Create and Update several accounts in a row.|
|"DELETE accounts":account/#accounts_delete|Delete several accounts in a row.|

p(title). "Account Contacts":account_contact/#format

p(caption). Account contacts belongs to a particular account. The _account_id_ in the URI defines which account.

|_(thead). Type |_(thead). Description |
|"GET accounts/:account_id/contacts/:id":account_contact/#account_contact_get|Returns all the information about the account contact. This contact should belongs to the account _account_id_.|
|"PUT accounts/:account_id/contacts/:id":account_contact/#account_contact_put|Update a single account contact. This contact should belongs to the account _account_id_.|
|"DELETE accounts/:account_id/contacts/:id":account_contact/#account_contact_delete|Deletes a single account contact. This contact should belongs to the account _account_id_.|
|"GET accounts/:account_id/contacts":account_contact/#account_contacts_get|Returns all the contacts that belongs to the account _account_id_.|
|"POST accounts/:account_id/contacts":account_contact/#account_contacts_post|Create a single account contact. This contact will belongs to the account _account_id_.|
|"PUT accounts/:account_id/contacts":account_contact/#account_contacts_put|Create and Update several account contacts in a row. All should or will belongs to the account _account_id_.|
|"DELETE accounts/:account_id/contacts":account_contact/#account_contacts_delete|Delete several account contacts in a row. Those contacts should belongs to the account _account_id_.|

p(title). "Projects":project/#format

p(caption). Projects are an easy way to organize your tasks and documents towards a common objective.

|_(thead). Type |_(thead). Description |
|"GET projects/:id":project/#project_get|Returns all the information about the project|
|"PUT projects/:id":project/#project_put|Update a single project|
|"DELETE projects/:id":project/#project_delete|Deletes a single project|
|"GET projects":project/#projects_get|Returns the list of all your projects|
|"POST projects":project/#projects_post|Create a single project|
|"PUT projects":project/#projects_put|Create and update several projects in a row|
|"DELETE projects":project/#projects_delete|Delete several projects in a row|

p(title). "Items":item/#format

p(caption). Items are collections of items (services and products).

|_(thead). Type |_(thead). Description |
|"GET items/:id":item/#item_get|Returns all the information about the item.|
|"PUT items/:id":item/#item_put|Update a single item.|
|"DELETE items/:id":item/#item_delete|Deletes a single item.|
|"GET items":item/#items_get|Returns the list of all your items.|
|"POST items":item/#items_post|Create a single item.|
|"PUT items":item/#items_put|Create and Update several items in a row.|
|"DELETE items":item/#items_delete|Delete several items in a row.|

p(title). "Sales Orders":sales_order/#format

p(caption). The way to register and track orders from your customers.

|_(thead). Type |_(thead). Description |
|"GET sales_orders/:id":sales_order/#sales_order_get|Returns all the information about the sales order, including its order lines.|
|"PUT sales_orders/:id":sales_order/#sales_order_put|Update a single sales order. Use ../order_lines/:id to edit order lines.|
|"DELETE sales_orders/:id":sales_order/#sales_order_delete|Deletes a single sales order and all its order lines.|
|"GET sales_orders":sales_order/#sales_orders_get|Returns the list of all your sales orders, with their order lines.|
|"POST sales_orders":sales_order/#sales_orders_post|Create a single sales order and its order lines.|
|"PUT sales_orders":sales_order/#sales_orders_put|Create (with order lines) and Update (but not order lines) several sales orders in a row.|
|"DELETE sales_orders":sales_order/#sales_orders_delete|Delete several sales orders and their order lines in a row.|

p(title). "Order Lines":order_line/#format

p(caption). Product or service lines that are embeded within sales or purchases documents. Contains infos like price, quantity, description, etc...
While adding, removing or updating an order line, related values on the contextual document will be updated accordingly.

|_(thead). Type |_(thead). Description |
|"GET ../order_lines/:id":order_line/#order_line_get|Returns all the information about a single order line.|
|"PUT ../order_lines/:id":order_line/#order_line_put|Update a single order line. |
|"DELETE ../order_lines/:id":order_line/#order_line_delete|Removes a single order line from the contextual document. |
|"GET ../order_lines":order_line/#order_lines_get|Returns the list of all order lines that belongs to the contextual document.|
|"POST ../order_lines":order_line/#order_lines_post|Add a single order line to the contextual document. |
|"PUT ../order_lines":order_line/#order_lines_put|Update and Add several order lines to the contextual document in a row. |
|"DELETE ../order_lines":order_line/#order_lines_delete|Remove several order lines in a row from the contextual document. |