---
layout: default
title: "- General"
---

h1(#general). REST API : General

h2. Resources

There's two kind of resources in myERP. Actual Datas from your domain, and those who refers to a kind of data as a whole.

h3. Actual Data

They end with the *id* of the actual data they refer to. They describe a single data.

p. Sample

{% highlight bash %}
curl -X GET {{ site.api.base_url }}{{ site.api.v1}}{{ site.resource.accounts.url}}/55002 {{site.api.auth_pattern}}
{% endhighlight %}
*55002* is the *id* of the account you are trying to get. Within myERP, you can find this id at the end of this account URI edition mode:
{% highlight bash %}
https://app.myerp.com/index.jsp?locale=en_US#account/55002/edit
{% endhighlight %}

Those are mostly used for GET (to retrieve a data), PUT (to edit a data) or DELETE (to delete a data) request.

h3. Data type

There's no id into them. They describe a type of data as a whole.

p. Sample

{% highlight bash %}
curl -X GET {{ site.api.base_url }}{{ site.api.v1}}{{ site.resource.accounts.url}} {{site.api.auth_pattern}}
{% endhighlight %}
This will retrieve the list of all your accounts.

Those are used to create new data of this kind, using POST request.
They are also usefull when you want to create or delete several datas of a specific kind in a row.


h2. JSON Fields

h3. Missing fields

* Creation: if the missing field is mandatory, an error message will be returned. Otherwise, the default value will be applied.
* Edition: the missing field is ignored, and no changes will be performed on it. If you want to edit a single field, just send this single one.

h3. Non existant fields

If your JSON contains any fields that are not managed by the resource, those fields will be ignored. So, beware of any typo.

h3. Duplicates fields

If a field is duplicate within the JSON or a resource, the value of the last one will prevail.

h3. Wrong values

* Bad type: If any value of a wrong type stands into your JSON, the parsing of the JSON will turn wrong and an error message will be returned.
* Wrong value: Some fields only accept certain values. If the value of such a field is wrong in your JSON, an error message will be returned.
* Non editable: While editing a resource, if any field that is not editable stands within your JSON, and tries to perform an actual modification, an error message will be returned.

h3. Lists

A field can consist in a list of data of another kind, with their own JSON format (like customer's contact list).
While editing such a list, the list you send will become the whole new list. Which means the following :

* Data that don't appear anymore in the new list will be deleted.
* Data that are in both the old and new list will be edited.
* Data that are only in the new list will be created.

Also, please notice that :

* Matching are performed on data's ID.
* Sending an empty list will *delete the whole list*.
* Like other fields, omitting the field wont perform any changes on the list.

p. Example on customer contacts list field

If the current contact list is :

{% highlight bash %}
contacts: [
  {
    "id": 48,
    "first_name": "Ed",
    "last_name": "Smith",
    "email": "ed.smith@myerp.com"
  },
  {
    "id": 49,
    "first_name": "Jonh",
    "last_name": "Doh",
    "email": "jonh.doh@myerp.com"
  }
]
{% endhighlight %}

The following POST...

{% highlight bash %}
contacts: [
  {
    "id": 49,
    "email": "new.email@myerp.com"
  },
  {
    "first_name": "Patrick",
    "last_name": "Martin",
    "email": "patrick.martin@myerp.com"
  }
]
{% endhighlight %}

...will delete contact 48 (Ed Smith), edit the email of contact 49 (Jonh Doh), and create the brand new contact Patrick Martin.
